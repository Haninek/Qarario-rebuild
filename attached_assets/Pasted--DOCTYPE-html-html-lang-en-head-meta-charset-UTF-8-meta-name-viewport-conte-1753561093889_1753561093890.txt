<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Qarari Risk Score</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
  <style>
    body {
      background: #f8f9fa;
      font-family: 'Segoe UI', sans-serif;
    }
    .form-section {
      border-left: 4px solid #0d6efd;
      padding-left: 15px;
      margin-top: 2rem;
      margin-bottom: 1rem;
    }
    .risk-meter {
      font-weight: bold;
      padding: 12px;
      border-radius: 6px;
      text-align: center;
    }
  </style>
</head>
<body>
  <div class="container py-5">
    <h1 class="mb-4 text-primary">Qarari Risk Assessment</h1>
    <form id="scoreForm" class="row g-3" onsubmit="submitScore(event)"></form>
    <div id="scoreOutput" class="mt-5"></div>
  </div>

  <script>
    async function loadForm() {
      const res = await fetch('/score/finance-rules');
      const rules = await res.json();
      const form = document.getElementById('scoreForm');
      let step = 1;

      for (const [section, fields] of Object.entries(rules)) {
        const divider = document.createElement('div');
        divider.className = 'col-12 form-section';
        divider.innerHTML = `<h5>Step ${step++}: ${section}</h5>`;
        form.appendChild(divider);

        for (const [key, rule] of Object.entries(fields)) {
          const field = document.createElement('div');
          field.className = 'col-md-6';
          const label = document.createElement('label');
          label.className = 'form-label';
          label.innerHTML = `${rule.question} <span class="text-muted small">(Weight: ${rule.weight})</span>`;

          let input;
          if (rule.options) {
            input = document.createElement('select');
            input.className = 'form-select';
            rule.options.forEach(opt => {
              const o = document.createElement('option');
              o.value = opt;
              o.textContent = opt;
              input.appendChild(o);
            });
          } else {
            input = document.createElement('input');
            input.type = key.toLowerCase().includes('date') ? 'date' : 'text';
            input.className = 'form-control';
          }

          input.name = key;
          input.placeholder = rule.question;
          field.appendChild(label);
          field.appendChild(input);
          form.appendChild(field);
        }
      }

      form.innerHTML += `<div class="col-12 text-end">
        <button class="btn btn-primary mt-4">Submit</button>
      </div>`;
    }

    async function submitScore(e) {
      e.preventDefault();
      const data = {};
      document.querySelectorAll('#scoreForm [name]').forEach(input => {
        data[input.name] = input.value;
      });

      const res = await fetch('/score/finance', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(data)
      });
      const result = await res.json();
      const out = document.getElementById('scoreOutput');
      const score = result.score.total_score;
      const risk = score >= 80 ? '✅ Low Risk' : score >= 60 ? '⚠️ Moderate Risk' : '❌ High Risk';
      const color = score >= 80 ? 'success' : score >= 60 ? 'warning' : 'danger';

      out.innerHTML = `
        <div class="risk-meter bg-${color} text-white">Score: ${score} — ${risk}</div>
        <p class="text-muted mt-2">Raw: ${result.score.raw_score} / Max: ${result.score.max_possible}</p>
        ${result.offers.length > 0 ? `
        <h5 class="mt-4">Recommended Loan Offers:</h5>
        <ul class="list-group mb-4">
          ${result.offers.map(o => `<li class="list-group-item">$${o.toLocaleString()}</li>`).join('')}
        </ul>` : `
        <div class="alert alert-warning mt-4">
          ❌ Your score indicates a high risk of non-payment. At this time, we are unable to extend an offer.
        </div>`}
      `;
    }

    window.onload = loadForm;
  </script>
</body>
</html>